name: CI for karsajobs-ui  # Nama konfigurasi CI.

on:
  push:
    branches:
      - karsajobs-ui  # CI akan berjalan ketika terjadi push pada branch karsajobs-ui.

jobs:
  # Job untuk melakukan linting pada Dockerfile.
  lint-dockerfile:
    runs-on: ubuntu-latest  # Spesifikasi runner, menggunakan sistem operasi Ubuntu terbaru.

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Menggunakan aksi (action) untuk checkout repository.

      - name: Lint Dockerfile
        run: |
          # Install hadolint
          sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64
          sudo chmod +x /bin/hadolint

          # Run hadolint against Dockerfile
          hadolint Dockerfile  # Menjalankan hadolint untuk memeriksa Dockerfile.

  # Job untuk menjalankan unit tests pada aplikasi backend (Go).
  test-app:
    runs-on: ubuntu-latest  # Spesifikasi runner, menggunakan sistem operasi Ubuntu terbaru.
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Menggunakan aksi (action) untuk checkout repository.

      - name: Set Up Go
        uses: actions/setup-go@v2  # Menggunakan aksi untuk menyiapkan lingkungan Go.
        with:
          go-version: 1.17  # Versi Go yang akan di-setup.

      - name: Run Unit Tests
        run: go test -v -short --count=1 $(go list ./...)  # Menjalankan unit tests pada aplikasi backend (Go).

  # Job untuk melakukan build dan push Docker image pada branch karsajobs-ui.
  build-app-karsajobs-ui:
    runs-on: ubuntu-latest  # Spesifikasi runner, menggunakan sistem operasi Ubuntu terbaru.
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Menggunakan aksi (action) untuk checkout repository.

      - name: Set Up Go
        uses: actions/setup-go@v2  # Menggunakan aksi untuk menyiapkan lingkungan Go.
        with:
          go-version: 1.17  # Versi Go yang akan di-setup.

      - name: Build and Push Docker Image
        run: |
          # Build Docker image
          docker build -t ghcr.io/kingxdeni/karsajobs-ui:latest .  # Membangun Docker image.

          # Login to GitHub Container Registry using the provided token
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u kingxdeni --password-stdin  # Login ke GitHub Container Registry.

          # Push Docker image to GitHub Container Registry
          docker push ghcr.io/kingxdeni/karsajobs-ui:latest  # Mengunggah Docker image ke GitHub Container Registry.
